
Здесь описан ход разработки данного задания :
 сначала создаем новый проект, проверяем, что все нормально с виртуальным окружением (virt_env или venv без разницы)
 потом ставим джанго через команду pip install django
 потом создаем проект django-admin startproject manage_panel_Template - он создаст папку проекта

 настроим сервер или из строки или создать кнопку через EditConfiguration, если команда то, python .\manage.py runserver 2300 (у меня стандартные порты заняты)

 views.py создаем и подключаем render для страниц from django.shortcuts import render
 и создаем функции обработки каждой страницы. Каждая функция отвечает за каждую страницу

 для удобной манипуляции данными создаем словарь для меню, где будем хранить имя и значение пункта
 в каждй функции определим переменные заголовка и данных
 заголовок - у каждого свой
 данные = переменная хранящая список
 и возвращаем функцию рендера с аргументами имени шаблона(старницы для перенаправления на страницу точнее) и параметра контекста)

 в urls.py
 подключим все что насоздавали во views.py - from .views import *

 и определим в urlpatterns = [
...
]
 список URL-шаблонов для обработки запросов веб-приложения.
 Каждый URL-шаблон указывает на конкретную функцию-обработчик,
 которая будет вызвана при обращении к нужному URL-адресу


 в setting.py должны быть указаны директории
 TEMPLATES = [
 ...
 'DIRS': [BASE_DIR / 'templates'], - templates папка
...

и папка статиков
...
STATIC_URL = '/static/'
STATIC_FILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]


в папке шаблонов - templates -> создаем файлы разметки гипертекста для каждой страницы
так как страницы похожи мы можем создать базовую разметку и от нее наследовать поведение для остальных страниц
в нашем случае базовая - base.html
там основная разметка в остальных - наследуем суть директивой {% extends 'base.html' %}, и опционально изменяем
внутри разметки используем директивы внутри блоков для работы с элементами типа:
             {% for key, value in menu.items %}
            <li><a href="{{ value }}">{{ key }}</a></li>
             {% endfor %} - по сути директива цикла
__________________________________________



Возможно что-то забыл, но в общем-то вроде как все. Создан файл pip freeze > requirements.txt для сохранения состояния проекта
